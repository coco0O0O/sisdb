# 配置文件说明：
# key 不能包含'.' , 否则搜索的时候会有问题
# include 空格 后跟文件名，相对当前conf的目录
# 数组和集合必须加逗号，最后一个元素不加逗号

# 存放数据的路径
dbpath : ../db

# 删除和修改字段时备份数据的路径
safe : {
  path : safe ,  # 目录
  deeply : 0,    # 保存深度，0=全部保存 1=仅仅备份删除的 2=仅仅备份字段修改的，3=两个都备份
  lasts : 30     # 保留最近30条，
}

# 写日志的路径
log : {
  screen : 1,   # 是否输出到屏幕
  path : logs , # 目录
  level : 5,    # 级别
  maxsize : 10  # 最大尺寸 单位M 超过后会重新生成新的log
}

# 可能启动的服务
workers : 
{
  # 数据持久化服务
  save-class : { 
    # format : struct,
    work-time: { # 有该字段时，表示需要定时运行
      plans-work : [900,1200,1530] # 定时存储 单位分钟 
      # delay : 3 设置该字段表示以间隔时间来运行， 单位为秒 系统默认最小1秒
    }
  },
  # 初始化数据库线程服务
  init-class : {  # 服务类名
    source : stkdb.now, # 取哪个数据表 默认time字段 市场号在工作期间 并且日期为当日 就开始初始化
    work-time: { # 有该字段时，表示需要定时运行
      always-work : {
        start : 0,  # 开始时间 单位分钟
        stop : 0,   # 结束时间 单位分钟
        delay : 10  # 间隔时间 单位秒
      }
    }     
  },
  ws-class : {   # 服务类名 - 提供 ws 接口服务
    port : 7329,
    work-time: { # 有该字段时，表示需要定时运行
      always-work : {
        start : 0,  # 开始时间 单位分钟
        stop : 0,   # 结束时间 单位分钟
        delay : 10  # 间隔时间 单位秒
      }
    }  
  }
}

# 系统表定义, 如果有这一项就支持PRICE和VOLUME字段类型 根据INFO信息进行数据缩放处理
# 必须放在最前面, 
system : { # 名字不能改
  tables : 
  {
    include db.system.conf
  },
  # 缺省变量集合
  values : {
    SH.EXCH : {
      country    : "CN",
      market     : "SH",
      work-time  : "[900,1530]",
      trade-time : "[[930,1130],[1300,1500]]"
    },
    SZ.EXCH : {
      country    : "CN",
      market     : "SZ",
      work-time  : "[900,1530]",
      trade-time : "[[930,1130],[1300,1500]]"
    },
    SH600600.INFO : {
      market  : "SH",
      code    : "600600",
      name    : "青岛啤酒",
      search  : "QDPJ,600600",
      type    : 1,
      dot     : 2,
      pzoom   : 100,
      vunit   : 100
    }
  }
}

sisdb : { # 名字不能改
  # 证券行情基础表
  stkdb : { # 名字可以改
    tables : {
      include db.stk.conf,
      include db.stk.l2.conf
    }
  },
  # 以下两种表都是从stkdb中的数据运算而来的，具备高频变化的特性，
  # 买卖信号数据表
  signdb : {
    tables : {
      include db.sign.conf   # 信号标注
    }
  },
  # 特征数据表 技术指标
  idxdb : {
    tables : {
      include db.idx.conf  # 技术指标数据
    }
  },
  # 策略算法数据表
  dpdb : {
    tables : {
      include db.dp.conf  # 策略的核心数据库
    }
  }
}
