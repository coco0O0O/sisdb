# 配置文件说明：
# key 不能包含'.' , 否则搜索的时候会有问题
# include 空格 后跟文件名，相对当前conf的目录
# 数组和集合必须加逗号，最后一个元素不加逗号

# 存放数据的路径
dbpath : ../db

# 删除和修改字段时备份数据的路径
safe : {
  path : safe ,  # 目录
  deeply : 0,    # 保存深度，0=全部保存 1=仅仅备份删除的 2=仅仅备份字段修改的，3=两个都备份
  lasts : 30     # 保留最近30条，
}

# 写日志的路径
log : {
  path : logs , # 目录
  level : 5,    # 级别
  maxsize : 10  # 最大尺寸 单位M 超过后会重新生成新的log
}

# 保存数据的设置
save-method: { 
  # 有该字段时，表示需要按内部定义的方法保存数据
  plans-work : [900,1200,1530] # 定时存储 单位分钟 
  # 有该字段时，表示在设定的时间范围（单位分钟）内按时间间隔来保存数据 单位秒 
  # always-work : {
  #  start : 900, # 开始时间 单位分钟
  #  stop : 1530, # 结束时间 单位分钟
  #  delay : 300  # 间隔时间 单位秒
  # } 
}

# 系统表定义, 如果有这一项就支持PRICE和VOLUME字段类型 根据INFO信息进行数据缩放处理
# 必须放在最前面
system : {
  tables : 
  {
    include db.system.conf
  },
  # 缺省变量集合
  values : {
    SH.EXCH : {
      country    : CN,
      market     : SH,
      work-time  : "[900,1530]",
      trade-time : "[[930,1130],[1300,1500]]"
    },
    SZ.EXCH : {
      country    : "CN",
      market     : "SZ",
      work-time  : "[900,1530]",
      trade-time : "[[930,1130],[1300,1500]]"
    },
    SH600600.INFO : {
      market  : "SH",
      code    : "600600",
      name    : "青岛啤酒",
      search  : "QDPJ,600600",
      type    : 1,
      dot     : 2,
      prc-unit: 1,
      vol-unit: 100,
      before  : 35.00
    }
  }
}

# 证券行情基础表
sisdb : {
  tables : {
    include db.stock.conf,
    include db.stock.l2.conf
  }
}

# 以下两种表都是从stkdb中的数据运算而来的，具备高频变化的特性，

# 买卖信号数据表
signdb : {
  tables : {
    include db.sign.conf   # 信号标注
  }
}
# 特征数据表 技术指标
idxdb : {
  tables : {
    include db.index.conf  # 技术指标数据
  }
}

# 特征数据表
dpdb : {
  tables : {
    include db.digger.conf  # 策略的核心数据库
  }
}
