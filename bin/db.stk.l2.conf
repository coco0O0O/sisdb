
snapshot: {
  scale : second, # 有scale，默认按time索引
  write-method : { 
    sort : "time",  # 以哪个字段进行排序，只能有一个字段
    solely : "time"  # 可多个字段，表示不能重复，重复即代表修改
  },
  fields: {
  # 字段名| 数据类型| 长度 | 数量 | 小数位 
    time    : [second, 4],  # 直接根据format的类型生成time的类型
    open    : [price,  4],
    high    : [price,  4],
    low     : [price,  4],
    close   : [price,  4],
    vol     : [uint,   4],
    money   : [uint,   4],
    before  : [price,  4],  # 前收盘  ??? 放这里很方便，但也很难受，只能等以后支持json数据表再来处理
    stophigh: [price,  4],  # 最高限价
    stoplow : [price,  4],  # 最低限价
    cjbs    : [uint,   4],  # 成交笔数
    waskp   : [price,  4],  # 加权平均委买价格
    waskv   : [uint,   4],  # 委托买入总量(单位: 手)
    wbidp   : [price,  4],  # 加权平均委卖价格
    wbidv   : [uint,   4],  # 委托卖出总量(单位: 手)
    askp    : [price,  4, 10],  # 表示后面跟10个同样的字段，字段名为askp1...askp10
    askv    : [uint,   4, 10],
    bidp    : [price,  4, 10],
    bidv    : [uint,   4, 10]
  }
}
# 逐笔成交
reports:{
  scale : msec, # 按毫秒增补
  write-method : { 
    sort : "time"
  },
  fields: {
# 字段名| 数据类型| 长度|
    time     : [msec,   4],  # 成交时间 (秒)
    flag     : [char,   1],  # 买卖方向(买：'B', 卖：'S',撤单：'C') 撤单时price为0 
    price    : [price,  4],
    vol      : [volume, 4],
    order    : [uint,   4],  # 成交序号
    askorder : [uint,   4],  # 叫买方委托序号 
    bidorder : [uint,   4]   # 叫卖方委托序号
  }
}

# 买卖队列
queues:{
  scale : second, # 按秒增补
  write-method : { 
    sort : "time",  # 以哪个字段进行排序，只能有一个字段
    solely : "time"
  },
  fields: {
# 字段名| 数据类型| 长度|
    time  : [second, 4],  # 每个时间点一对数据
    askp  : [price,  4],
    asknum: [uint,   4],      # 队列实际数量 
    asks  : [uint,   1],      # 队列数量 <= 50
    askv  : [uint,   4, 50],  # 表示后面跟50个同样的字段，字段名为vols1...vols10
    bidp  : [price,  4],
    bidnum: [uint,   4],      # 队列实际数量 
    bids  : [uint,   1],      # 队列数量 <= 50
    bidv  : [uint,   4, 50]   # 表示后面跟50个同样的字段，字段名为vols1...vols10
  }
}

# 历史 ddx
dayddx:{
  scale : date, 
  write-method : { 
    sort : "time",  # 以哪个字段进行排序，只能有一个字段
    solely : "time"
  },
  fields: {
# 字段名| 数据类型| 长度|
    time : [date,  4],  # 每个时间点一对数据
    asks : [uint,  2, 6], 
    askv : [uint,  4, 6],     
    askm : [uint,  4, 6],           
    bids : [uint,  2, 6], 
    bidv : [uint,  4, 6],       
    bidm : [uint,  4, 6]     
  }
}

# 实时 ddx
minddx:{
  scale : min1,
  limit : 1200,  # 单只股票最大记录数 最近5天的ddx分钟数据
  publishs: "dayddx", # 只用写minddx，dayddx就有数据了
  write-method : { 
    sort : "time",  # 以哪个字段进行排序，只能有一个字段
    solely : "time"
  },
  fields: {
# 字段名| 数据类型| 长度|
    time : [second, 4],  # 每个时间点一对数据
    asks : [uint,   2, 6], 
    askv : [uint,   4, 6],     
    askm : [uint,   4, 6],           
    bids : [uint,   2, 6], 
    bidv : [uint,   4, 6],       
    bidm : [uint,   4, 6]      
  }
}