
# 配置文件说明：
# 配置时，值如果需要有',' 就必须用引号包含起来
# 查询时 key 不能包含'.' , 否则搜索的时候会有问题
# include 空格 后跟文件名，相对当前conf的目录
# 数组和集合必须加逗号，最后一个元素不加逗号

# 写日志的路径
# 根据任务名不同各自生成不同的log
log : {
  path : logs , # 目录
  level : 10,  # 级别
  maxsize : 10  #最大尺寸 单位M
}
# 该配置存放所有的服务配置 根据带参数来确定调用的服务
# 程序运行时如果不加参数，就会列出所有支持的服务
#
# 时间序列分为以下四种 不同时序存在不同子目录中 非时序数据存在根目录下
# 1. 非时序数据 常驻内存 除非删除或到期
# 2. 日期型数据 D 以日期为索引 默认20年数据常驻内存
# 3. 分钟级数据 M 以分钟为索引 默认20天数据常驻内存
# 4. 逐笔级数据 T 以(毫)秒为索引 默认当日数据常驻内存
#             存储文件索引名以日期为标记,
#             获取多个key磁盘数据时,需在内存中根据序列号重新排序,默认同一秒内序列号递增
#             默认当日数据常驻内存
# 对时间类型数据,每条数据传入如果没有time字段就会自动生成一个time字段,T类型 取当前机器时间

# 每一个key对应一个map表,map中为字段名或组合名+数据列表 可临时增加字段 存储时保存所有字段按表格压缩

workers : {
  sisdb_server : {
    level: 0,                  # 0 - boot server 
    work-time: { # 有该字段时，表示需要定时运行
      # plans-work : [2355] # 日期发生变化 就根据cathc中的数据 定时切分并存储为分类数据 清理缓存 单位分钟 
      delay : 1   # 设置该字段表示以间隔时间来运行， 单位为毫秒 系统默认最小30毫秒
    },
    wlog-save: {               # 记录每条write信息
      source : "data/wlog",    # form this dir load data 
      classname: sisdb_wlog
    },
    fast-save : {              # 高速存储 数据存储到固态硬盘上
      compress: snappy,        # zip mode
      max-size :  500,         # 1M bytes save after 
      safe-path: "data/safe",  # safe dir
      save-path: "data",       # sdb dir + dataset 
      classname: sisdb_disk    # stream data --> diskfile sdb
    },
    # slow-save : {              # 慢速存储 主要把固态硬盘数据存储到 磁盘阵列或其他慢速介质上
    # },
    # auth : [ # 有该字段表示需要用户验证
    #   { username : guest, password : guest1234, access : "admin" },
    #   { username : admin, password : admin1234, access : "admin" }
    # ],
    datasets : {
      # dpdb : {
      #   classname: sisdb,
      #   tables : {
      #     include stk.digger.conf   # 交易数据
      #   }
      # },
      stkdb : { 
        classname: sisdb,
        tables : {
          include stk.realtime.conf,    # 是否加载默认的结构化文件 如果有冲突以磁盘文件结构覆盖
          include stk.after.conf 
        }
      }
    },
    converts : {               # sisdb format converts of datasets
        stkdb.stk_snapshot : [stkdb.min, stkdb.day],
        stkdb.stk_snapshot : [stkdb.min, stkdb.day],
        classname: sisdb_convert
    },
    # 数据写入无锁队列供其他人使用
    server : {
      # io : accept, # connect accept
      # role : answer,  # request answer
      protocol : ws,  # ws tcp redis     
      # compress : snappy, # none snappy for client
      # crypt : none,  # none ssl for client
      ip : 0.0.0.0,
      port : 7329,   
      argvs :{
        # 其他参数
      }
    }
  }
}
